class Solution {
    static List<List<Integer>> subsets = new ArrayList<List<Integer>>();
    
    public List<List<Integer>> subsets(int[] nums) {
        subsets.clear();
        return subsets(nums, 0, new ArrayList<Integer>());
    }
    
     public List<List<Integer>> subsetsIterative(int[] nums) {
        
        subsets.clear();
        subsets.add(new ArrayList<Integer>());
   //     return subsets(nums, 0, new ArrayList<Integer>());
    
        for(int i =0;i< nums.length;i++){
            int size = subsets.size();
            
            for(int j=0;j< size;j++){
                
                subsets.add(new ArrayList<>(subsets.get(j)));
                subsets.get(subsets.size()-1).add(nums[i]);
            }
            
        }
    
    return subsets;
    }
    
    public List<List<Integer>> subsets(int[] nums, int index, ArrayList<Integer> list) {
    
        if(index == nums.length){
           subsets.add(list);
          //  System.out.println(curr);
            return subsets;
        }
        ArrayList<Integer> prev = new ArrayList<Integer>();
        prev = (ArrayList) list.clone();
        list.add(nums[index]);
        
        subsets(nums, index+1, list);
        subsets(nums, index+1, prev);
    
        return subsets;
    }
}
