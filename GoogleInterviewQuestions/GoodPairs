class Solution {
    public int numIdenticalPairs(int[] nums) {
    
        
        /*
            [1,2,3,1,1,3]
            
            1
        */
        
        HashMap<Integer, List<Integer>> map = new HashMap<>();
        for(int i=0;i< nums.length;i++){
            if(map.containsKey(nums[i])){
                List<Integer> list = map.get(nums[i]);
                list.add(i);
                map.put(nums[i], list);
            }
            else{
                List<Integer> list = new ArrayList<>();
                list.add(i);
                map.put(nums[i], list);
            }
        }
        
        int count =0;
        for(int i=0;i< nums.length;i++){
            if(map.containsKey(nums[i])){
                
                for(int n: map.get(nums[i])){
                    if(i< n){
                        count++;
                    }
                }
            }
        }
        
        return count;
    }
    
     public int numIdenticalPairs(int[] nums) {
    
        int[] frq = new int[101];
        int count = 0;
        
        for(int i=0;i< nums.length;i++){
            
            count+= frq[nums[i]];
            frq[nums[i]]++;
        }

        return count;
    }
}
