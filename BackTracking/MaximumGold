class Solution {
    
    static int[][] visited;
	static int max = Integer.MIN_VALUE;
    public int getMaximumGold(int[][] grid) {
        
        max = Integer.MIN_VALUE;
        
        for(int i =0 ;i< grid.length;i++) {
			for(int j=0;j< grid[0].length;j++) {
				
				visited = new int[grid.length][grid[0].length];
				if(grid[i][j] != 0) {
				//	getMaximumGold(grid, i, j, 0);
                    System.out.println(" Profit for (i,j) => (" +i + "," + j + ") is " + getMaximumGold(grid, i, j, 0));
				}
			}
		}
        return max;
    }
    
     public static int getMaximumGold(int[][] grid, int i, int j, int total_gold) {
	        
		 
		 if(total_gold > max) {
			 max = total_gold;
		 }
		 
		 if(i >=0 && i < grid.length && j >= 0 && j < grid[0].length && visited[i][j] == 0 && grid[i][j] != 0) {
			
			 
			 visited[i][j] = 1;
			 
			 total_gold = total_gold + grid[i][j];
			 getMaximumGold(grid, i+1, j, total_gold);
			 getMaximumGold(grid, i-1, j, total_gold);
			 getMaximumGold(grid, i, j+1, total_gold);
			 getMaximumGold(grid, i, j-1, total_gold);
             visited[i][j] =0;
		 }
		 
		 return max;
	 }
}
